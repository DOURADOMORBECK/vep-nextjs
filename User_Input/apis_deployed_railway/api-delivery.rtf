{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import \{ Hono \} from "hono";\
import postgres from "postgres";\
\
const db = postgres(process.env.DATABASE_URL!, \{\
  ssl: \{ rejectUnauthorized: false \},\
\});\
const app = new Hono();\
\
// Todas as rotas de entrega\
app.get("/delivery", async (c) => \{\
  const result =\
    await db`SELECT * FROM delivery_routes ORDER BY created_at DESC`;\
  return c.json(result);\
\});\
\
// Rota de entrega espec\'edfica\
app.get("/delivery/:id", async (c) => \{\
  const \{ id \} = c.req.param();\
  const result = await db`SELECT * FROM delivery_routes WHERE id = $\{id\}`;\
  return c.json(result[0] || null);\
\});\
\
// Rotas de entrega por status\
app.get("/delivery/status/:status", async (c) => \{\
  const \{ status \} = c.req.param();\
  const result =\
    await db`SELECT * FROM delivery_routes WHERE status = $\{status\} ORDER BY created_at DESC`;\
  return c.json(result);\
\});\
\
// Rotas de entrega por motorista\
app.get("/delivery/driver/:driverId", async (c) => \{\
  const \{ driverId \} = c.req.param();\
  const result =\
    await db`SELECT * FROM delivery_routes WHERE driver_id = $\{driverId\} ORDER BY created_at DESC`;\
  return c.json(result);\
\});\
\
// Estat\'edsticas de entrega\
app.get("/delivery/stats", async (c) => \{\
  const total = await db`SELECT COUNT(*) AS total FROM delivery_routes`;\
  const byStatus =\
    await db`SELECT status, COUNT(*) as count FROM delivery_routes GROUP BY status`;\
  const recent =\
    await db`SELECT COUNT(*) AS recent FROM delivery_routes WHERE created_at > NOW() - INTERVAL '24 hours'`;\
  return c.json(\{\
    total: total[0]?.total || 0,\
    byStatus,\
    recent: recent[0]?.recent || 0,\
  \});\
\});\
\
// Pontos de uma rota espec\'edfica\
app.get("/delivery/:routeId/points", async (c) => \{\
  const \{ routeId \} = c.req.param();\
  const result =\
    await db`SELECT * FROM delivery_route_points WHERE route_id = $\{routeId\} ORDER BY sequence`;\
  return c.json(result);\
\});\
\
export default app;\
}